body {
  font-family: sans-serif;
  margin: 0;
  background: #f9f9f9;
}

.app-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.header {
  background: #282c34;
  color: white;
  padding: 10px 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.title-input {
  font-size: 20px;
  padding: 5px 10px;
  width: 200px;
}

.import-label {
  background: #61dafb;
  color: black;
  padding: 6px 12px;
  border-radius: 5px;
  cursor: pointer;
}

.main {
  display: flex;
  flex: 1;
  flex-direction: row-reverse;
}

.sidebar {
  width: 150px;
  background: #ddd;
  display: flex;
  flex-direction: column;
  gap: 10px;
  padding: 10px;
}

.shape-btn {
  background: white;
  border: 1px solid #ccc;
  padding: 8px;
  text-align: center;
  cursor: grab;
  border-radius: 4px;
}

.canvas {
  flex: 1;
  position: relative;
  border: 1px solid #ccc;
  margin: 10px;
  overflow: hidden;
}

.shape {
  /* This div now acts as the common container for all shapes */
  /* NO BORDER HERE - border will be applied to inner content for circle/square, or via SVG stroke for triangle */
  background: transparent;
  position: absolute; /* Positioned relative to the canvas */
  box-sizing: border-box;
  position: relative; /* CRITICAL: Allows absolute positioning of children like resize-handle */
}

/* New: Styles for the inner content div of circle/square */
.shape-content {
  width: 100%; /* Make the inner div fill the container */
  height: 100%;
  border: 2px solid black; /* Apply border here for circle and square */
  background: transparent;
}

.shape.circle .shape-content { /* Now this correctly targets the inner div of a circle */
  border-radius: 50%;
}

/* The square will automatically inherit .shape-content border without border-radius */
/* Remove the old CSS triangle styling, as SVG is now used */
/* .shape.triangle {
  width: 0;
  height: 0;
  border-left: 20px solid transparent;
  border-right: 20px solid transparent;
  border-bottom: 40px solid transparent;
  border-bottom-color: black;
  position: absolute;
} */

/* This applies to the SVG element itself, making it fill its parent .shape div */
.shape > svg {
  width: 100%;
  height: 100%;
  display: block; /* Ensure SVG behaves as a block element */
  /* Stroke is handled in JSX for the polygon, so no border here */
}


.resize-handle {
  width: 16px;
  height: 16px;
  position: absolute;
  bottom: -8px; /* Position relative to the parent .shape div */
  right: -8px; /* Position relative to the parent .shape div */
  cursor: se-resize;
  z-index: 10; /* Ensure the handle is on top of the shape */
}

.counter {
  background: #fff;
  padding: 10px;
  text-align: center;
  border-top: 1px solid #ccc;
}
